<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Redlock算法 on cmdragon's Blog</title><link>https://blog.cmdragon.cn/tags/Redlock%E7%AE%97%E6%B3%95/</link><description>Recent content in Redlock算法 on cmdragon's Blog</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Wed, 17 Sep 2025 03:43:34 +0800</lastBuildDate><atom:link href="https://blog.cmdragon.cn/tags/Redlock%E7%AE%97%E6%B3%95/index.xml" rel="self" type="application/rss+xml"/><item><title>FastAPI秒杀库存总变负数？Redis分布式锁能帮你守住底线吗</title><link>https://blog.cmdragon.cn/posts/65ce343cc5df9faf3a8e2eeaab42ae45/</link><pubDate>Wed, 17 Sep 2025 03:43:34 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/65ce343cc5df9faf3a8e2eeaab42ae45/</guid><description>分布式锁在FastAPI中用于解决多实例并发访问共享资源时的数据一致性问题。其核心原理包括互斥性、安全性、可用性和容错性，常用Redis分布式锁实现。Redlock算法通过多节点投票确保锁的可靠性。FastAPI中通过aioredis实现异步分布式锁，支持锁的获取、释放和续约。测试策略覆盖单实例、多实例并发及锁超时等场景，确保锁的正确性和稳定性。</description></item></channel></rss>