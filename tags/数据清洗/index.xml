<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>数据清洗 on cmdragon's Blog</title><link>https://blog.cmdragon.cn/tags/%E6%95%B0%E6%8D%AE%E6%B8%85%E6%B4%97/</link><description>Recent content in 数据清洗 on cmdragon's Blog</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Tue, 29 Jul 2025 10:00:09 +0800</lastBuildDate><atom:link href="https://blog.cmdragon.cn/tags/%E6%95%B0%E6%8D%AE%E6%B8%85%E6%B4%97/index.xml" rel="self" type="application/rss+xml"/><item><title>FastAPI后台任务：异步魔法还是同步噩梦？</title><link>https://blog.cmdragon.cn/posts/6a69eca9fd14ba8f6fa41502c5014edd/</link><pubDate>Tue, 29 Jul 2025 10:00:09 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/6a69eca9fd14ba8f6fa41502c5014edd/</guid><description>FastAPI中的后台任务用于处理不需要立即返回给客户端的耗时操作，如发送邮件或处理文件。通过&lt;code>BackgroundTasks&lt;/code>将任务加入队列，系统在响应返回后异步执行任务。核心原理包括任务注册机制和FIFO执行时序控制，默认使用线程池执行任务。典型应用场景包括邮件通知、文件批处理和数据清洗。常见报错如422 Validation Error和500 Internal Server Error，可通过检查请求体、添加默认值和使用错误重试机制解决。</description></item><item><title>深入理解正则表达式：从入门到精通</title><link>https://blog.cmdragon.cn/posts/c5baeec7210f3ca0a683234f40132c0e/</link><pubDate>Tue, 30 Apr 2024 18:37:21 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/c5baeec7210f3ca0a683234f40132c0e/</guid><description>&lt;img src="https://blog.cmdragon.cn/images/2024_04_30 18_40_18.png" title="2024_04_30 18_40_18.png" alt="2024_04_30 18_40_18.png"/>
&lt;h2 id="第一章正则表达式入门">&lt;strong>第一章：正则表达式入门&lt;/strong>&lt;/h2>
&lt;h3 id="介绍正则表达式的基本概念和语法">&lt;strong>介绍正则表达式的基本概念和语法&lt;/strong> &lt;/h3>
&lt;p>正则表达式是一种用于描述字符串模式的表达式，由普通字符和特殊字符组成。常用的特殊字符包括：&lt;/p>
&lt;ul>
&lt;li>&lt;code>.&lt;/code>：匹配任意单个字符&lt;/li>
&lt;li>&lt;code>*&lt;/code>：匹配前面的字符0次或多次&lt;/li>
&lt;li>&lt;code>+&lt;/code>：匹配前面的字符1次或多次&lt;/li>
&lt;li>&lt;code>?&lt;/code>：匹配前面的字符0次或1次&lt;/li>
&lt;li>&lt;code>[]&lt;/code>：匹配括号内的任意一个字符&lt;/li>
&lt;li>&lt;code>^&lt;/code>：匹配字符串的开头&lt;/li>
&lt;li>&lt;code>$&lt;/code>：匹配字符串的结尾&lt;/li>
&lt;li>&lt;code>\d&lt;/code>：匹配任意数字&lt;/li>
&lt;li>&lt;code>\w&lt;/code>：匹配任意字母、数字或下划线&lt;/li>
&lt;li>&lt;code>\s&lt;/code>：匹配任意空白字符&lt;/li>
&lt;/ul>
&lt;h3 id="正则表达式在文本处理中的应用场景">&lt;strong>正则表达式在文本处理中的应用场景&lt;/strong> &lt;/h3>
&lt;p>正则表达式在文本处理中有广泛的应用场景，例如：&lt;/p></description></item></channel></rss>