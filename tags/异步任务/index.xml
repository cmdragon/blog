<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>异步任务 on cmdragon's Blog</title><link>https://blog.cmdragon.cn/tags/%E5%BC%82%E6%AD%A5%E4%BB%BB%E5%8A%A1/</link><description>Recent content in 异步任务 on cmdragon's Blog</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Wed, 10 Sep 2025 06:22:28 +0800</lastBuildDate><atom:link href="https://blog.cmdragon.cn/tags/%E5%BC%82%E6%AD%A5%E4%BB%BB%E5%8A%A1/index.xml" rel="self" type="application/rss+xml"/><item><title>如何用FastAPI玩转多模块测试与异步任务，让代码不再“闹脾气”？</title><link>https://blog.cmdragon.cn/posts/ddbfa0447a5d0d6f9af12e7a6b206f70/</link><pubDate>Wed, 10 Sep 2025 06:22:28 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/ddbfa0447a5d0d6f9af12e7a6b206f70/</guid><description>FastAPI框架在多模块集成测试中，通过&lt;code&gt;pytest&lt;/code&gt;的&lt;code&gt;fixture&lt;/code&gt;创建临时数据库，确保测试数据隔离，并使用&lt;code&gt;unittest.mock&lt;/code&gt;模拟外部依赖，验证模块间交互。异步任务通过&lt;code&gt;BackgroundTasks&lt;/code&gt;处理，定时任务则借助&lt;code&gt;APScheduler&lt;/code&gt;实现，测试时手动触发任务以验证逻辑。常见报错如&lt;code&gt;422 Validation Error&lt;/code&gt;和&lt;code&gt;503 ServiceError&lt;/code&gt;，可通过检查请求字段类型和服务连接解决。运行环境需Python 3.10+，依赖库包括&lt;code&gt;fastapi&lt;/code&gt;、&lt;code&gt;pytest&lt;/code&gt;等。</description></item><item><title>容器化部署FastAPI应用：如何让你的任务系统代码在云端跳舞？</title><link>https://blog.cmdragon.cn/posts/d949a268c7ab60f7b56b7f9ed71690cc/</link><pubDate>Mon, 18 Aug 2025 03:42:20 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/d949a268c7ab60f7b56b7f9ed71690cc/</guid><description>容器化部署 FastAPI 应用的核心价值在于确保环境一致性、资源隔离、快速扩展和部署标准化。通过 Dockerfile 和 Kubernetes 配置，可以实现高效的容器化部署。多阶段构建优化镜像大小，集成 Celery 处理异步任务，并结合 Redis 实现消息队列。健康检查与 Prometheus 监控确保系统稳定性，配置管理和安全加固措施提升应用安全性。</description></item><item><title>Celery任务监控的魔法背后藏着什么秘密？</title><link>https://blog.cmdragon.cn/posts/f43335725bb3372ebc774db1b9f28d2d/</link><pubDate>Wed, 13 Aug 2025 05:52:37 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/f43335725bb3372ebc774db1b9f28d2d/</guid><description>Celery 结果存储系统（Result Backend）负责持久化任务状态和返回结果，支持多种存储方案如 Redis、RabbitMQ 和数据库。Flower 监控平台用于实时监控任务吞吐量、内存占用、队列堆积和失败率等指标。集成示例展示了如何在 FastAPI 中提交任务并查询结果，同时处理常见错误如结果存储异常和状态更新延迟。通过任务装饰器可配置结果过期时间，使用 AsyncResult 查询任务执行结果。</description></item></channel></rss>