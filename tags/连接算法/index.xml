<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>连接算法 on cmdragon's Blog</title><link>https://blog.cmdragon.cn/tags/%E8%BF%9E%E6%8E%A5%E7%AE%97%E6%B3%95/</link><description>Recent content in 连接算法 on cmdragon's Blog</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Wed, 22 Oct 2025 09:24:06 +0800</lastBuildDate><atom:link href="https://blog.cmdragon.cn/tags/%E8%BF%9E%E6%8E%A5%E7%AE%97%E6%B3%95/index.xml" rel="self" type="application/rss+xml"/><item><title>PostgreSQL连接的那些弯弯绕：笛卡尔积、外连接和LATERAL你都理明白没？</title><link>https://blog.cmdragon.cn/posts/0b86f22d9b99fabd6a798d05d5561d7a/</link><pubDate>Wed, 22 Oct 2025 09:24:06 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/0b86f22d9b99fabd6a798d05d5561d7a/</guid><description>PostgreSQL支持多种连接类型，包括交叉连接（CROSS JOIN）、内连接（INNER JOIN）和外连接（LEFT/RIGHT/FULL OUTER JOIN）。交叉连接生成笛卡尔积，内连接仅保留匹配行，外连接保留未匹配行并用NULL填充。USING和NATURAL JOIN可简化连接条件。连接顺序影响性能，建议优先连接小结果集的表。LATERAL子查询允许动态引用前面表的列。PostgreSQL根据表大小、索引和连接条件自动选择连接算法，如嵌套循环、哈希连接和排序合并连接。优化技巧包括避免不必要的外连接、提前过滤数据和避免笛卡尔积。</description></item></channel></rss>