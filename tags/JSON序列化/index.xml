<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>JSON序列化 on cmdragon's Blog</title><link>https://blog.cmdragon.cn/tags/JSON%E5%BA%8F%E5%88%97%E5%8C%96/</link><description>Recent content in JSON序列化 on cmdragon's Blog</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Mon, 07 Jul 2025 18:10:59 +0800</lastBuildDate><atom:link href="https://blog.cmdragon.cn/tags/JSON%E5%BA%8F%E5%88%97%E5%8C%96/index.xml" rel="self" type="application/rss+xml"/><item><title>如何在FastAPI中玩转WebSocket消息处理？</title><link>https://blog.cmdragon.cn/posts/fbf7d6843e430133547057254deb2dfb/</link><pubDate>Mon, 07 Jul 2025 18:10:59 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/fbf7d6843e430133547057254deb2dfb/</guid><description>FastAPI 提供了强大的 WebSocket 支持，适用于多种实时通信场景。通过 &lt;code&gt;WebSocket&lt;/code&gt; 类，可以实现文本消息的接收与发送，支持实时聊天、协同编辑等应用。对于二进制数据传输，使用 &lt;code&gt;receive_bytes()&lt;/code&gt; 和 &lt;code&gt;send_bytes()&lt;/code&gt; 方法，适合处理图片、音频等文件。JSON 消息可通过 Pydantic 模型自动解析和验证，确保数据结构正确。此外，通过 &lt;code&gt;asyncio.wait_for&lt;/code&gt; 实现超时控制，定期发送心跳包维持连接。WebSocket 支持多种消息类型，结合异常处理机制，确保通信的稳定性和可靠性。</description></item></channel></rss>