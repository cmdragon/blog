<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>测试模拟 on cmdragon's Blog</title><link>https://blog.cmdragon.cn/tags/%E6%B5%8B%E8%AF%95%E6%A8%A1%E6%8B%9F/</link><description>Recent content in 测试模拟 on cmdragon's Blog</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Sun, 07 Sep 2025 06:55:32 +0800</lastBuildDate><atom:link href="https://blog.cmdragon.cn/tags/%E6%B5%8B%E8%AF%95%E6%A8%A1%E6%8B%9F/index.xml" rel="self" type="application/rss+xml"/><item><title>多环境配置切换机制能否让开发与生产无缝衔接？</title><link>https://blog.cmdragon.cn/posts/533874f5700b8506d4c68781597db659/</link><pubDate>Sun, 07 Sep 2025 06:55:32 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/533874f5700b8506d4c68781597db659/</guid><description>依赖注入（Dependency Injection）是一种设计模式，通过外部提供组件所需的依赖，避免组件自行创建或管理依赖。FastAPI 的依赖注入系统基于 Python 的类型提示和 &lt;code&gt;Depends&lt;/code&gt; 函数，支持在测试或特殊场景中替换默认依赖。通过 &lt;code&gt;dependency_overrides&lt;/code&gt; 字典，可以临时覆盖依赖函数，确保函数签名一致。多环境配置中，使用 Pydantic 的 &lt;code&gt;BaseSettings&lt;/code&gt; 从环境变量或 &lt;code&gt;.env&lt;/code&gt; 文件加载配置，支持类型验证和默认值，避免手动解析。</description></item></channel></rss>