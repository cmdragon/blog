<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>组件通信 on cmdragon's Blog</title><link>https://blog.cmdragon.cn/tags/%E7%BB%84%E4%BB%B6%E9%80%9A%E4%BF%A1/</link><description>Recent content in 组件通信 on cmdragon's Blog</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Thu, 30 Oct 2025 09:09:07 +0800</lastBuildDate><atom:link href="https://blog.cmdragon.cn/tags/%E7%BB%84%E4%BB%B6%E9%80%9A%E4%BF%A1/index.xml" rel="self" type="application/rss+xml"/><item><title>快速入门Vue3事件处理的挑战题：v-on、修饰符、自定义事件你能通关吗？</title><link>https://blog.cmdragon.cn/posts/60ce517684f4a418f453d66aa805606c/</link><pubDate>Thu, 30 Oct 2025 09:09:07 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/60ce517684f4a418f453d66aa805606c/</guid><description>Vue3 中的 &lt;code&gt;v-on&lt;/code&gt; 指令用于处理 DOM 事件，支持内联表达式和方法处理器。事件修饰符如 &lt;code&gt;.stop&lt;/code&gt; 和 &lt;code&gt;.prevent&lt;/code&gt; 简化了事件流控制和默认行为阻止。按键修饰符如 &lt;code&gt;.enter&lt;/code&gt; 和系统修饰符如 &lt;code&gt;.ctrl&lt;/code&gt; 用于处理键盘和组合键事件。自定义事件通过 &lt;code&gt;$emit&lt;/code&gt; 实现子组件向父组件传递数据，&lt;code&gt;defineEmits&lt;/code&gt; 可验证事件参数。常见报错包括 &lt;code&gt;$event&lt;/code&gt; 未定义、事件名大小写不匹配和修饰符拼写错误。</description></item><item><title>Vue插槽与作用域插槽</title><link>https://blog.cmdragon.cn/posts/65ce47d7ccbe7863701d3ec3514b0b7e/</link><pubDate>Sat, 01 Jun 2024 09:07:52 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/65ce47d7ccbe7863701d3ec3514b0b7e/</guid><description>&lt;img src="https://blog.cmdragon.cn/images/2024_06_01 21_11_56.png" title="2024_06_01 21_11_56.png" alt="2024_06_01 21_11_56.png"/&gt;
&lt;h2 id="第1章插槽的概念与原理"&gt;第1章：插槽的概念与原理&lt;/h2&gt;
&lt;h3 id="插槽的定义"&gt;插槽的定义&lt;/h3&gt;
&lt;p&gt;在Vue.js中，插槽（Slots）是一种强大的功能，它允许你将内容分发到组件的各个部分。简单来说，插槽是组件内部预留的一个位置，用于放置组件使用者提供的HTML结构。这样，组件的使用者可以根据自己的需求，灵活地填充或替换组件的某些部分，而不需要修改组件的内部实现。&lt;/p&gt;</description></item></channel></rss>