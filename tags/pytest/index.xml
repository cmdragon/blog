<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Pytest on cmdragon's Blog</title><link>https://blog.cmdragon.cn/tags/pytest/</link><description>Recent content in Pytest on cmdragon's Blog</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Tue, 09 Sep 2025 04:07:19 +0800</lastBuildDate><atom:link href="https://blog.cmdragon.cn/tags/pytest/index.xml" rel="self" type="application/rss+xml"/><item><title>如何在FastAPI中玩转“时光倒流”的数据库事务回滚测试？</title><link>https://blog.cmdragon.cn/posts/bf9883a75ffa46b523a03b16ec56ce48/</link><pubDate>Tue, 09 Sep 2025 04:07:19 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/bf9883a75ffa46b523a03b16ec56ce48/</guid><description>在 FastAPI 项目中，集成测试通过事务回滚机制确保测试环境的干净性。使用 &lt;code&gt;pytest&lt;/code&gt;、&lt;code&gt;SQLAlchemy&lt;/code&gt; 和 &lt;code&gt;FastAPI TestClient&lt;/code&gt; 组合，实现数据库事务的嵌套控制，测试中的所有数据库操作在用例结束时自动回滚。通过 &lt;code&gt;begin_nested()&lt;/code&gt; 创建保存点，确保每个测试用例在独立的事务中执行，避免数据污染。测试案例模拟用户注册和资料修改，验证数据库写入和接口请求的正确性。常见问题如 &lt;code&gt;IntegrityError&lt;/code&gt; 和连接未释放，通过检查事务回滚机制和显式关闭连接解决。</description></item><item><title>如何在FastAPI中优雅地模拟多模块集成测试？</title><link>https://blog.cmdragon.cn/posts/be553dbd5d51835d2c69553f4a773e2d/</link><pubDate>Mon, 08 Sep 2025 05:37:45 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/be553dbd5d51835d2c69553f4a773e2d/</guid><description>FastAPI 集成测试通过 &lt;code&gt;pytest&lt;/code&gt;、&lt;code&gt;httpx&lt;/code&gt; 和 &lt;code&gt;asyncio&lt;/code&gt; 工具链模拟多模块交互，重点测试认证、数据库和外部服务。使用 &lt;code&gt;unittest.mock&lt;/code&gt; 替换外部依赖，&lt;code&gt;pytest-asyncio&lt;/code&gt; 管理异步事务回滚。测试模型涵盖认证、用户服务和支付模块的协同验证。实战案例展示了订单支付链路的测试流程，通过 &lt;code&gt;fixture&lt;/code&gt; 隔离第三方支付服务，复用 &lt;code&gt;TestClient&lt;/code&gt; 维护请求上下文。认证测试中，采用动态 Token 生成策略，避免硬编码风险，并通过 &lt;code&gt;AuthContext&lt;/code&gt; 类管理认证流水线。</description></item><item><title>为什么你的FastAPI测试覆盖率总是低得让人想哭？</title><link>https://blog.cmdragon.cn/posts/985c18ca802f1b6da828b92e082b4d4e/</link><pubDate>Mon, 01 Sep 2025 03:56:38 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/985c18ca802f1b6da828b92e082b4d4e/</guid><description>FastAPI 开发中，测试环境和基础框架的搭建至关重要。使用 &lt;code&gt;pipenv&lt;/code&gt; 或 &lt;code&gt;poetry&lt;/code&gt; 管理虚拟环境和依赖，项目结构包括应用入口、API 路由、数据模型、数据库连接和配置文件。核心框架代码涉及 SQLAlchemy 配置、Pydantic 配置管理和 FastAPI 入口。测试覆盖率检测工具配置包括 &lt;code&gt;pytest&lt;/code&gt;、&lt;code&gt;coverage.py&lt;/code&gt; 和 &lt;code&gt;pytest-cov&lt;/code&gt;，编写测试用例并生成覆盖率报告。优化策略包括分支覆盖率测试、异步任务覆盖率和目标覆盖率报告，确保代码质量和可维护性。</description></item><item><title>如何让FastAPI测试不再成为你的噩梦？</title><link>https://blog.cmdragon.cn/posts/29858a7a10d20b4e4649cb75fb422eab/</link><pubDate>Sun, 31 Aug 2025 06:09:47 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/29858a7a10d20b4e4649cb75fb422eab/</guid><description>本文介绍了如何配置测试环境并搭建基础框架，包括安装依赖包、设计项目结构和实现基础框架。通过FastAPI和pytest的集成，详细展示了如何编写和运行测试用例，特别是异步测试和测试覆盖率优化策略。此外，还提供了常见报错的解决方案和高级测试策略，如数据库事务测试和持续集成配置。这些步骤和方法确保了测试的全面性和可靠性，提升了代码质量。</description></item><item><title>FastAPI测试环境配置的秘诀，你真的掌握了吗？</title><link>https://blog.cmdragon.cn/posts/6f9e71e8313db6de8c1431877a70b67e/</link><pubDate>Sat, 30 Aug 2025 02:32:06 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/6f9e71e8313db6de8c1431877a70b67e/</guid><description>&lt;img src="https://api2.cmdragon.cn/upload/cmder/20250304_012821924.jpg" title="cmdragon_cn.png" alt="cmdragon_cn.png"/&gt;
&lt;p&gt;扫描&lt;a href="https://api2.cmdragon.cn/upload/cmder/20250304_012821924.jpg"&gt;二维码&lt;/a&gt;
关注或者微信搜一搜：&lt;code&gt;编程智域 前端至全栈交流与成长&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://tools.cmdragon.cn/zh/apps?category=ai_chat"&gt;发现1000+提升效率与开发的AI工具和实用程序&lt;/a&gt;：https://tools.cmdragon.cn/&lt;/p&gt;
&lt;h2 id="1-fastapi-测试环境配置与基础框架搭建"&gt;1. FastAPI 测试环境配置与基础框架搭建&lt;/h2&gt;
&lt;h3 id="11-测试环境配置要点"&gt;1.1 测试环境配置要点&lt;/h3&gt;
&lt;p&gt;在 FastAPI 项目中配置测试环境需关注：&lt;/p&gt;</description></item><item><title>FastAPI依赖覆盖与测试环境模拟</title><link>https://blog.cmdragon.cn/posts/8a2bd816fabac0bc10bd2cf8494e4631/</link><pubDate>Thu, 10 Apr 2025 00:58:09 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/8a2bd816fabac0bc10bd2cf8494e4631/</guid><description>FastAPI的依赖覆盖机制通过重写依赖项实现运行环境切换，适用于隔离测试和模拟特定场景。依赖项存储在&lt;code&gt;dependency_overrides&lt;/code&gt;字典中，优先检查覆盖字典，使用&lt;code&gt;@app.dependency_overrides&lt;/code&gt;装饰器进行临时替换，测试完成后自动恢复。通过pytest搭建测试环境，覆盖数据库依赖，使用&lt;code&gt;TestClient&lt;/code&gt;进行测试。多场景模拟测试案例包括用户权限验证和第三方API模拟，分层测试策略涵盖单元测试、集成测试和E2E测试。最佳实践包括使用pytest参数化进行多场景测试，确保测试覆盖率统计包含依赖注入代码。常见报错如&lt;code&gt;DependencyOverrideNotFound&lt;/code&gt;和&lt;code&gt;TestClient响应验证失败&lt;/code&gt;，可通过检查依赖项定义、模拟数据格式和类型注解解决。</description></item></channel></rss>