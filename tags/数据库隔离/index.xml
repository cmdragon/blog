<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>数据库隔离 on cmdragon's Blog</title><link>https://blog.cmdragon.cn/tags/%E6%95%B0%E6%8D%AE%E5%BA%93%E9%9A%94%E7%A6%BB/</link><description>Recent content in 数据库隔离 on cmdragon's Blog</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Mon, 08 Sep 2025 05:37:45 +0800</lastBuildDate><atom:link href="https://blog.cmdragon.cn/tags/%E6%95%B0%E6%8D%AE%E5%BA%93%E9%9A%94%E7%A6%BB/index.xml" rel="self" type="application/rss+xml"/><item><title>如何在FastAPI中优雅地模拟多模块集成测试？</title><link>https://blog.cmdragon.cn/posts/be553dbd5d51835d2c69553f4a773e2d/</link><pubDate>Mon, 08 Sep 2025 05:37:45 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/be553dbd5d51835d2c69553f4a773e2d/</guid><description>FastAPI 集成测试通过 &lt;code&gt;pytest&lt;/code&gt;、&lt;code&gt;httpx&lt;/code&gt; 和 &lt;code&gt;asyncio&lt;/code&gt; 工具链模拟多模块交互，重点测试认证、数据库和外部服务。使用 &lt;code&gt;unittest.mock&lt;/code&gt; 替换外部依赖，&lt;code&gt;pytest-asyncio&lt;/code&gt; 管理异步事务回滚。测试模型涵盖认证、用户服务和支付模块的协同验证。实战案例展示了订单支付链路的测试流程，通过 &lt;code&gt;fixture&lt;/code&gt; 隔离第三方支付服务，复用 &lt;code&gt;TestClient&lt;/code&gt; 维护请求上下文。认证测试中，采用动态 Token 生成策略，避免硬编码风险，并通过 &lt;code&gt;AuthContext&lt;/code&gt; 类管理认证流水线。</description></item></channel></rss>