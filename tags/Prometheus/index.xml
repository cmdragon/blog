<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Prometheus on cmdragon's Blog</title><link>https://blog.cmdragon.cn/tags/Prometheus/</link><description>Recent content in Prometheus on cmdragon's Blog</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Tue, 19 Aug 2025 05:51:06 +0800</lastBuildDate><atom:link href="https://blog.cmdragon.cn/tags/Prometheus/index.xml" rel="self" type="application/rss+xml"/><item><title>如何用Prometheus和FastAPI打造任务监控的“火眼金睛”？</title><link>https://blog.cmdragon.cn/posts/e7464e5b4d558ede1a7413fa0a2f96f3/</link><pubDate>Tue, 19 Aug 2025 05:51:06 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/e7464e5b4d558ede1a7413fa0a2f96f3/</guid><description>FastAPI 提供了强大的工具来监控后台任务、异步任务和定时任务的性能。通过 Prometheus 收集关键指标，如任务执行时长、吞吐量、错误率和资源利用率，评估系统健康状况。使用 &lt;code>Summary&lt;/code> 和 &lt;code>Counter&lt;/code> 定义监控指标，并通过 &lt;code>/metrics&lt;/code> 端点暴露数据。Grafana 仪表板可视化任务延迟、错误率和资源利用率。在电商订单处理系统中，监控支付处理、库存更新等环节的性能瓶颈，优化整体流程。</description></item><item><title>如何在 FastAPI 中玩转 GraphQL 性能监控与 APM 集成？</title><link>https://blog.cmdragon.cn/posts/52fe9ea73b0e26de308ae0e539df21d2/</link><pubDate>Sat, 26 Jul 2025 12:14:14 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/52fe9ea73b0e26de308ae0e539df21d2/</guid><description>FastAPI 框架中通过 Strawberry 库实现 GraphQL 服务，优化策略包括使用 DataLoader 批处理、查询缓存和限制查询深度。性能监控通过 Prometheus 集成，记录查询次数、错误次数和字段解析耗时等关键指标。APM 系统集成 Elastic APM，配置自定义跟踪点和异常监控增强。最佳实践包括限制查询复杂度和增强异常处理，预防 N+1 查询问题。运行环境需安装 FastAPI、Strawberry、Prometheus 和 Elastic APM 等依赖。</description></item><item><title>FastAPI数据库连接池配置与监控</title><link>https://blog.cmdragon.cn/posts/06a7744b22307c94c8cabf0a26c4133d/</link><pubDate>Mon, 28 Apr 2025 00:13:02 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/06a7744b22307c94c8cabf0a26c4133d/</guid><description>FastAPI数据库连接池通过预先创建和复用连接，显著降低连接创建开销。配置参数包括最小连接数（minsize）、最大连接数（maxsize）和空闲连接存活时间（max_inactive_connection_lifetime）。通过Tortoise-ORM集成Prometheus和Grafana实现实时监控，优化连接管理。常见问题如连接池耗尽和连接泄漏，可通过增加maxsize、检查未提交事务和使用async with管理事务来解决。定期监控和优化连接池参数是确保数据库性能的关键。</description></item></channel></rss>