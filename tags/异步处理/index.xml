<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>异步处理 on cmdragon's Blog</title><link>https://blog.cmdragon.cn/tags/%E5%BC%82%E6%AD%A5%E5%A4%84%E7%90%86/</link><description>Recent content in 异步处理 on cmdragon's Blog</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Wed, 09 Jul 2025 16:01:43 +0800</lastBuildDate><atom:link href="https://blog.cmdragon.cn/tags/%E5%BC%82%E6%AD%A5%E5%A4%84%E7%90%86/index.xml" rel="self" type="application/rss+xml"/><item><title>如何让你的WebSocket连接既安全又高效？</title><link>https://blog.cmdragon.cn/posts/eb598d50b76ea1823746ab7cdf49ce05/</link><pubDate>Wed, 09 Jul 2025 16:01:43 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/eb598d50b76ea1823746ab7cdf49ce05/</guid><description>WebSocket安全认证通过JWT令牌在握手阶段进行验证，失败时返回403状态码。跨域配置需在中间件中声明&lt;code>websocket&lt;/code>协议并设置白名单。防御策略包括应用层限流、Nginx限流配置和连接数熔断，防止DDOS攻击。异步处理优化通过连接池调优和任务分流提升性能。常见报错如&lt;code>403 Forbidden&lt;/code>和&lt;code>RuntimeError&lt;/code>需检查Authorization头和CORS配置，并在接收消息时添加异常处理。</description></item><item><title>WebSocket与HTTP协议究竟有何不同？FastAPI如何让长连接变得如此简单？</title><link>https://blog.cmdragon.cn/posts/903448c85701a6a747fc9a4417e2bdc8/</link><pubDate>Sat, 05 Jul 2025 17:08:37 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/903448c85701a6a747fc9a4417e2bdc8/</guid><description>&lt;img src="https://blog.cmdragon.cn/images/7989a41781759816107c155a4591fc73.jpeg" title="cmdragon_cn.png" alt="cmdragon_cn.png"/>
&lt;img src="https://api2.cmdragon.cn/upload/cmder/20250304_012821924.jpg" title="cmdragon_cn.png" alt="cmdragon_cn.png"/>
&lt;p>扫描&lt;a href="https://api2.cmdragon.cn/upload/cmder/20250304_012821924.jpg">二维码&lt;/a>
关注或者微信搜一搜：&lt;code>编程智域 前端至全栈交流与成长&lt;/code>&lt;/p>
&lt;p>&lt;a href="https://tools.cmdragon.cn/zh/apps?category=ai_chat">发现1000+提升效率与开发的AI工具和实用程序&lt;/a>：https://tools.cmdragon.cn/&lt;/p>
&lt;h1 id="第一章websocket协议基础与fastapi定位">第一章：WebSocket协议基础与FastAPI定位&lt;/h1>
&lt;h2 id="11-websocket与http协议核心差异">1.1 WebSocket与HTTP协议核心差异&lt;/h2>
&lt;p>通过对比传统HTTP协议与WebSocket协议的核心特性，我们可以从以下维度理解二者的差异：&lt;/p></description></item></channel></rss>