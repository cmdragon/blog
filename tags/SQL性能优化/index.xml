<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>SQL性能优化 on cmdragon's Blog</title><link>https://blog.cmdragon.cn/tags/SQL%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/</link><description>Recent content in SQL性能优化 on cmdragon's Blog</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Tue, 21 Oct 2025 03:54:12 +0800</lastBuildDate><atom:link href="https://blog.cmdragon.cn/tags/SQL%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/index.xml" rel="self" type="application/rss+xml"/><item><title>子查询总拖慢查询？把它变成连接就能解决？</title><link>https://blog.cmdragon.cn/posts/79c590fbd87ece535b11a71c9667884f/</link><pubDate>Tue, 21 Oct 2025 03:54:12 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/79c590fbd87ece535b11a71c9667884f/</guid><description>子查询是嵌套在其他SQL语句中的查询，分为标量、行、列和表子查询。相关子查询依赖外部查询变量，性能较差，而非相关子查询独立执行。PostgreSQL优化器通过子查询扁平化将子查询转换为更高效的连接操作。连接操作包括内连接、外连接和交叉连接，优化器基于成本模型选择连接顺序和方法，如嵌套循环、哈希和排序合并连接。通过改写子查询为连接或使用LATERAL连接，可以显著提升查询性能。</description></item><item><title>PostgreSQL新手SQL总翻车？这7个性能陷阱你踩过没？</title><link>https://blog.cmdragon.cn/posts/068ecb772a87d7df20a8c9fb4b233f8e/</link><pubDate>Thu, 09 Oct 2025 04:57:43 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/068ecb772a87d7df20a8c9fb4b233f8e/</guid><description>PostgreSQL查询执行流程包括词法分析、语法分析、查询重写、查询规划器和执行器，其中查询规划器根据统计信息选择成本最低的执行计划。常见性能陷阱包括忽略索引导致全表扫描、函数/表达式导致索引失效、隐式类型转换破坏索引、复合索引顺序错误、不必要的&lt;code&gt;SELECT *&lt;/code&gt;、JOIN操作笛卡尔积与顺序错误，以及CTE的“优化围栏”问题。通过&lt;code&gt;EXPLAIN ANALYZE&lt;/code&gt;可诊断性能问题，避免这些陷阱可显著提升查询效率。</description></item></channel></rss>