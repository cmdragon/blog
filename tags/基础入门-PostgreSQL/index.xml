<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>基础入门 - PostgreSQL on cmdragon's Blog</title><link>https://blog.cmdragon.cn/tags/%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8-PostgreSQL/</link><description>Recent content in 基础入门 - PostgreSQL on cmdragon's Blog</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Thu, 16 Oct 2025 02:00:15 +0800</lastBuildDate><atom:link href="https://blog.cmdragon.cn/tags/%E5%9F%BA%E7%A1%80%E5%85%A5%E9%97%A8-PostgreSQL/index.xml" rel="self" type="application/rss+xml"/><item><title>想抓PostgreSQL里的慢SQL？pg_stat_statements基础黑匣子和pg_stat_monitor时间窗，谁能帮你更准揪出性能小偷？</title><link>https://blog.cmdragon.cn/posts/b2213bfcb5b88a862f2138404c03d596/</link><pubDate>Thu, 16 Oct 2025 02:00:15 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/b2213bfcb5b88a862f2138404c03d596/</guid><description>pg_stat_statements是PostgreSQL的核心性能监控模块，用于跟踪SQL语句的计划与执行统计信息，帮助定位性能瓶颈。通过修改配置文件并重启数据库，可以启用该模块。核心配置参数包括跟踪SQL的最大数量、跟踪范围等。&lt;code&gt;pg_stat_statements&lt;/code&gt;视图提供SQL的详细统计信息，如执行次数、总执行时间、缓存命中率等。&lt;code&gt;pg_stat_monitor&lt;/code&gt;是增强版模块，支持按时间窗口统计和响应时间直方图，适合持续监控。结合这两个模块，可以持续优化数据库性能，通过定位瓶颈SQL、分析执行计划、优化索引等步骤提升效率。</description></item><item><title>想知道数据库怎么给查询“算成本选路线”？EXPLAIN能帮你看明白？</title><link>https://blog.cmdragon.cn/posts/9101b75bdec6faea9b35d54f14e37f36/</link><pubDate>Tue, 07 Oct 2025 06:47:24 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/9101b75bdec6faea9b35d54f14e37f36/</guid><description>EXPLAIN工具用于展示PostgreSQL查询优化器的执行计划，帮助理解查询的执行方式和优化路径。&lt;code&gt;EXPLAIN&lt;/code&gt;仅生成估计计划，而&lt;code&gt;EXPLAIN ANALYZE&lt;/code&gt;会执行查询并提供实际数据。查询计划以树状结构呈现，包含节点类型（如&lt;code&gt;Seq Scan&lt;/code&gt;、&lt;code&gt;Index Scan&lt;/code&gt;）和关键列（如&lt;code&gt;Cost&lt;/code&gt;、&lt;code&gt;Rows&lt;/code&gt;）。&lt;code&gt;Cost&lt;/code&gt;是优化器的相对成本，基于I/O和CPU成本计算。通过分析计划，可以优化查询，如添加索引、选择合适的Join类型或避免不必要的排序。</description></item><item><title>PostgreSQL查询的筛子、排序、聚合、分组？你会用它们搞定数据吗？</title><link>https://blog.cmdragon.cn/posts/ef4800975ffa84f1ca51976a70a1585b/</link><pubDate>Sun, 28 Sep 2025 07:29:38 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/ef4800975ffa84f1ca51976a70a1585b/</guid><description>PostgreSQL中的WHERE子句用于精准筛选数据，支持基本比较与逻辑运算，以及IN、BETWEEN、LIKE、IS NULL等谓词处理复杂场景。ORDER BY子句用于按指定规则排序结果，支持单列、多列及计算列排序。聚合函数如COUNT、SUM、AVG等用于提炼关键信息，GROUP BY与HAVING用于分组分析，WHERE过滤行，HAVING过滤分组结果。综合实践展示了如何组合过滤、排序与聚合，常见报错及解决方法也提供了实用指导。</description></item><item><title>PostgreSQL插入数据还在逐条敲？批量、冲突处理、返回自增ID的技巧你会吗？</title><link>https://blog.cmdragon.cn/posts/0e3bf7efc030b024ea67ee855a00f2de/</link><pubDate>Tue, 23 Sep 2025 07:42:26 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/0e3bf7efc030b024ea67ee855a00f2de/</guid><description>PostgreSQL的INSERT语句用于向表中插入新行，其基本结构包括目标表、插入列、插入源和冲突处理等部分。基础操作涵盖单条和多条数据插入，支持默认值和部分列插入。进阶用法包括使用WITH子句预处理数据、处理唯一约束冲突的ON CONFLICT子句，以及通过RETURNING子句返回插入结果。常见报错如唯一约束冲突和语法错误，可通过检查数据、使用ON CONFLICT或核对语法解决。</description></item></channel></rss>