<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>存储过程 on cmdragon's Blog</title><link>https://blog.cmdragon.cn/tags/%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B/</link><description>Recent content in 存储过程 on cmdragon's Blog</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Thu, 02 Oct 2025 09:01:23 +0800</lastBuildDate><atom:link href="https://blog.cmdragon.cn/tags/%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B/index.xml" rel="self" type="application/rss+xml"/><item><title>PostgreSQL里的PL/pgSQL到底是啥？能让SQL从“说目标”变“讲步骤”？</title><link>https://blog.cmdragon.cn/posts/5c967e595058c4a1fc4474a68e64031d/</link><pubDate>Thu, 02 Oct 2025 09:01:23 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/5c967e595058c4a1fc4474a68e64031d/</guid><description>PL/pgSQL 是 PostgreSQL 的过程化 SQL 语言，结合了 SQL 的声明式语法和过程式控制结构，用于编写复杂的数据库逻辑。其基本结构包括函数和过程，支持变量声明、参数传递、动态 SQL、条件判断、循环以及错误处理。通过 PL/pgSQL，用户可以实现计算、批量操作、事务控制等功能。函数通过 &lt;code&gt;SELECT&lt;/code&gt; 调用，过程通过 &lt;code&gt;CALL&lt;/code&gt; 调用，且过程支持显式事务控制。动态 SQL 需使用 &lt;code&gt;EXECUTE&lt;/code&gt; 和 &lt;code&gt;USING&lt;/code&gt; 避免 SQL 注入。</description></item><item><title>存储过程与触发器：提高数据库性能与安全性的利器</title><link>https://blog.cmdragon.cn/posts/712adcfc99736718e1182040d70fd36b/</link><pubDate>Wed, 12 Feb 2025 00:18:53 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/712adcfc99736718e1182040d70fd36b/</guid><description>在现代数据库管理中，存储过程和触发器是两种强大的工具，能够极大提升操作效率和数据完整性。</description></item><item><title>深入探讨存储过程的创建与应用：提高数据库管理效率的关键工具</title><link>https://blog.cmdragon.cn/posts/570cd68087f5895415ab3f94980ecc84/</link><pubDate>Thu, 23 Jan 2025 00:18:53 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/570cd68087f5895415ab3f94980ecc84/</guid><description>在数据驱动的商业环境中，数据库管理系统必须具备高效的操作能力。而存储过程作为一种封装的数据库逻辑，提供了一种有效的解决方案，以增强数据库的功能。存储过程是一组预编译的SQL语句，可以被应用程序多次调用，从而有效地简化复杂的数据库操作</description></item></channel></rss>