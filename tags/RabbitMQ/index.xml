<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>RabbitMQ on cmdragon's Blog</title><link>https://blog.cmdragon.cn/tags/RabbitMQ/</link><description>Recent content in RabbitMQ on cmdragon's Blog</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Sat, 09 Aug 2025 04:51:03 +0800</lastBuildDate><atom:link href="https://blog.cmdragon.cn/tags/RabbitMQ/index.xml" rel="self" type="application/rss+xml"/><item><title>FastAPI消息持久化与ACK机制：如何确保你的任务永不迷路？</title><link>https://blog.cmdragon.cn/posts/13a59846aaab71b44ab6f3dadc5b5ec7/</link><pubDate>Sat, 09 Aug 2025 04:51:03 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/13a59846aaab71b44ab6f3dadc5b5ec7/</guid><description>FastAPI框架中，消息持久化和ACK确认机制是确保任务可靠执行的关键。默认的内存任务存储存在服务器重启丢失和高并发内存压力问题。通过消息队列和持久化数据库备份实现任务持久化，结合ACK确认机制确保消息被正确处理后才移除。Celery+RabbitMQ集成方案提供高效的任务调度和队列管理。增强型任务模型支持优先级和过期时间设置。常见报错如502 Bad Gateway和422 Validation Error需检查消息队列连接和任务模型字段验证。</description></item><item><title>BackgroundTasks 还是 RabbitMQ？你的异步任务到底该选谁？</title><link>https://blog.cmdragon.cn/posts/d26fdc150ff9dd70c7482381ff4c77c4/</link><pubDate>Thu, 07 Aug 2025 07:20:32 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/d26fdc150ff9dd70c7482381ff4c77c4/</guid><description>FastAPI 的 BackgroundTasks 适用于轻量级任务，如日志记录和邮件发送，执行时间通常小于 3 秒。对于耗时任务，如图片处理和数据分析，推荐使用 RabbitMQ 结合 Celery。RabbitMQ 提供了消息持久化、任务重试和高并发处理能力，确保任务不丢失。通过 Pydantic 模型设计任务负载，生产者将任务提交到队列，消费者异步处理任务。综合案例展示了图片水印处理系统的实现，结合 BackgroundTasks 和 RabbitMQ 的优势，提升系统性能和可靠性。</description></item></channel></rss>