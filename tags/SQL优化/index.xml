<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>SQL优化 on cmdragon's Blog</title><link>https://blog.cmdragon.cn/tags/SQL%E4%BC%98%E5%8C%96/</link><description>Recent content in SQL优化 on cmdragon's Blog</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Thu, 16 Oct 2025 02:00:15 +0800</lastBuildDate><atom:link href="https://blog.cmdragon.cn/tags/SQL%E4%BC%98%E5%8C%96/index.xml" rel="self" type="application/rss+xml"/><item><title>想抓PostgreSQL里的慢SQL？pg_stat_statements基础黑匣子和pg_stat_monitor时间窗，谁能帮你更准揪出性能小偷？</title><link>https://blog.cmdragon.cn/posts/b2213bfcb5b88a862f2138404c03d596/</link><pubDate>Thu, 16 Oct 2025 02:00:15 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/b2213bfcb5b88a862f2138404c03d596/</guid><description>pg_stat_statements是PostgreSQL的核心性能监控模块，用于跟踪SQL语句的计划与执行统计信息，帮助定位性能瓶颈。通过修改配置文件并重启数据库，可以启用该模块。核心配置参数包括跟踪SQL的最大数量、跟踪范围等。&lt;code&gt;pg_stat_statements&lt;/code&gt;视图提供SQL的详细统计信息，如执行次数、总执行时间、缓存命中率等。&lt;code&gt;pg_stat_monitor&lt;/code&gt;是增强版模块，支持按时间窗口统计和响应时间直方图，适合持续监控。结合这两个模块，可以持续优化数据库性能，通过定位瓶颈SQL、分析执行计划、优化索引等步骤提升效率。</description></item><item><title>想知道数据库怎么给查询“算成本选路线”？EXPLAIN能帮你看明白？</title><link>https://blog.cmdragon.cn/posts/9101b75bdec6faea9b35d54f14e37f36/</link><pubDate>Tue, 07 Oct 2025 06:47:24 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/9101b75bdec6faea9b35d54f14e37f36/</guid><description>EXPLAIN工具用于展示PostgreSQL查询优化器的执行计划，帮助理解查询的执行方式和优化路径。&lt;code&gt;EXPLAIN&lt;/code&gt;仅生成估计计划，而&lt;code&gt;EXPLAIN ANALYZE&lt;/code&gt;会执行查询并提供实际数据。查询计划以树状结构呈现，包含节点类型（如&lt;code&gt;Seq Scan&lt;/code&gt;、&lt;code&gt;Index Scan&lt;/code&gt;）和关键列（如&lt;code&gt;Cost&lt;/code&gt;、&lt;code&gt;Rows&lt;/code&gt;）。&lt;code&gt;Cost&lt;/code&gt;是优化器的相对成本，基于I/O和CPU成本计算。通过分析计划，可以优化查询，如添加索引、选择合适的Join类型或避免不必要的排序。</description></item><item><title>探索自联接（SELF JOIN）：揭示数据间复杂关系的强大工具</title><link>https://blog.cmdragon.cn/posts/f152dfcce73ed63594e329a1fb42c278/</link><pubDate>Sat, 11 Jan 2025 00:18:53 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/f152dfcce73ed63594e329a1fb42c278/</guid><description>自联接（SELF JOIN）是一种特殊的联接操作，在同一表中多次引用自己，从而允许开发者获取更复杂的数据关系。通过自联接，可以有效处理层级、映射和关联数据的查找，极大丰富了 SQL 查询的灵活性和表达能力。</description></item><item><title>索引与性能优化</title><link>https://blog.cmdragon.cn/posts/13b7f4e1c2f9ab927929f3931a8ee9b7/</link><pubDate>Sun, 15 Dec 2024 00:18:53 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/13b7f4e1c2f9ab927929f3931a8ee9b7/</guid><description>索引是数据库性能优化的重要工具，通过建立索引，可以加速数据的检索和查询操作，从而提高数据库的响应速度。虽然索引能显著改善数据访问性能，但不当的使用也可能导致性能下降。</description></item></channel></rss>