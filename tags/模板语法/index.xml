<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>模板语法 on cmdragon's Blog</title><link>https://blog.cmdragon.cn/tags/%E6%A8%A1%E6%9D%BF%E8%AF%AD%E6%B3%95/</link><description>Recent content in 模板语法 on cmdragon's Blog</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Thu, 30 Oct 2025 04:06:38 +0800</lastBuildDate><atom:link href="https://blog.cmdragon.cn/tags/%E6%A8%A1%E6%9D%BF%E8%AF%AD%E6%B3%95/index.xml" rel="self" type="application/rss+xml"/><item><title>快速入门Vue3的v-指令：数据和DOM的“翻译官”到底有多少本事？</title><link>https://blog.cmdragon.cn/posts/e4ae7d5e4a9205bb11b2baccb230c637/</link><pubDate>Thu, 30 Oct 2025 04:06:38 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/e4ae7d5e4a9205bb11b2baccb230c637/</guid><description>Vue 3中的指令是带有&lt;code&gt;v-&lt;/code&gt;前缀的特殊属性，用于将数据与DOM元素绑定。&lt;code&gt;v-bind&lt;/code&gt;用于动态绑定属性，如&lt;code&gt;src&lt;/code&gt;、&lt;code&gt;class&lt;/code&gt;等，支持简写语法&lt;code&gt;:&lt;/code&gt;。&lt;code&gt;v-on&lt;/code&gt;用于监听事件，如&lt;code&gt;click&lt;/code&gt;，简写为&lt;code&gt;@&lt;/code&gt;，支持事件修饰符如&lt;code&gt;.prevent&lt;/code&gt;。&lt;code&gt;v-if&lt;/code&gt;根据条件销毁或重建DOM，&lt;code&gt;v-show&lt;/code&gt;通过修改&lt;code&gt;display&lt;/code&gt;属性控制显示。&lt;code&gt;v-for&lt;/code&gt;用于循环渲染，需使用唯一&lt;code&gt;key&lt;/code&gt;。常见报错包括未定义变量或事件处理函数，需确保变量和函数正确定义。</description></item><item><title>快速入门Vue3，插值、动态绑定和避坑技巧你都搞懂了吗？</title><link>https://blog.cmdragon.cn/posts/999ce4fb32259ff4fbf4bf7bcb851654/</link><pubDate>Wed, 29 Oct 2025 12:03:42 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/999ce4fb32259ff4fbf4bf7bcb851654/</guid><description>Vue3的模板语法基于HTML，允许通过插值和指令将响应式数据与DOM绑定，实现数据变化时页面自动更新。核心流程包括模板解析为AST，编译为渲染函数，生成虚拟DOM并更新真实DOM。文本插值使用&lt;code&gt;{{ }}&lt;/code&gt;，支持简单表达式，自动转义HTML；&lt;code&gt;v-html&lt;/code&gt;指令可渲染原始HTML，但存在XSS风险。&lt;code&gt;v-bind&lt;/code&gt;用于动态绑定HTML属性，缩写为&lt;code&gt;:&lt;/code&gt;，支持动态属性名和对象语法，常用于动态切换&lt;code&gt;class&lt;/code&gt;和&lt;code&gt;style&lt;/code&gt;。所有绑定属性均为响应式，数据变化时自动更新。</description></item><item><title>vue3组件通信与props</title><link>https://blog.cmdragon.cn/posts/038af0ce9a794d8c6df8b4ab08bd2c65/</link><pubDate>Fri, 31 May 2024 09:00:57 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/038af0ce9a794d8c6df8b4ab08bd2c65/</guid><description>&lt;img src="https://blog.cmdragon.cn/images/2024_05_31 21_06_03.png" title="2024_05_31 21_06_03.png" alt="2024_05_31 21_06_03.png"/&gt;
&lt;h2 id="vue-3-组件基础"&gt;Vue 3 组件基础&lt;/h2&gt;
&lt;p&gt;在 Vue 3 中，组件是构建用户界面的基本单位，它们是可复用的 Vue 实例，具有自己的模板、数据、方法等。组件化开发使得代码更加模块化，易于管理和维护。以下是 Vue 3 组件的基础知识：&lt;/p&gt;</description></item><item><title>Vue 3 组件基础与模板语法详解</title><link>https://blog.cmdragon.cn/posts/f1d2e045fea28aefaad4d6732b7a05e7/</link><pubDate>Fri, 24 May 2024 16:31:13 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/f1d2e045fea28aefaad4d6732b7a05e7/</guid><description>&lt;img src="https://blog.cmdragon.cn/images/2024_05_24 16_35_34.png" title="2024_05_24 16_35_34.png" alt="2024_05_24 16_35_34.png"/&gt;
&lt;h2 id="vue-3-简介"&gt;Vue 3 简介&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;1. Vue 3 的新特性&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Vue 3引入了许多新的特性，以提高框架的性能和可维护性。下面是一些主要的新特性：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Composition API&lt;/strong&gt;：这是Vue 3中最大的变化之一，它提供了一种更灵活的方式来组织和重用组件的逻辑。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Teleport&lt;/strong&gt;：这是一个新的API，允许我们在组件树中将元素“传送”到其他位置。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Suspense&lt;/strong&gt;：这是一个新的API，允许我们在组件树中等待异步数据加载。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Fragment&lt;/strong&gt;：这是一个新的内置组件，允许我们在组件中渲染多个根节点。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;v-memo&lt;/strong&gt;：这是一个新的指令，允许我们在渲染过程中缓存组件的输出。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;更快的渲染速度&lt;/strong&gt;：Vue 3中的渲染器已经重写，提供了更快的渲染速度。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;2. 安装与配置&lt;/strong&gt;&lt;/p&gt;</description></item><item><title>Django自定义模板标签与过滤器</title><link>https://blog.cmdragon.cn/posts/2b6bd11099b5566885f6c25db84ea9f8/</link><pubDate>Fri, 17 May 2024 18:00:02 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/2b6bd11099b5566885f6c25db84ea9f8/</guid><description>&lt;img src="https://blog.cmdragon.cn/images/2024_05_17 18_10_17.png" title="2024_05_17 18_10_17.png" alt="2024_05_17 18_10_17.png"/&gt;
&lt;h3 id="django模板系统基础"&gt;Django模板系统基础&lt;/h3&gt;
&lt;h4 id="1-django模板语言概述"&gt;1. Django模板语言概述&lt;/h4&gt;
&lt;p&gt;Django模板语言（DTL）是一种用于在HTML中插入动态内容的语言。它允许开发者在模板中使用变量、标签、过滤器和注释，以便动态生成页面内容。变量用于显示动态数据，标签用于控制模板逻辑，过滤器用于格式化变量的输出，注释用于添加注释而不会在最终渲染中显示。&lt;/p&gt;</description></item></channel></rss>