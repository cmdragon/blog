<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>SQL查询 on cmdragon's Blog</title><link>https://blog.cmdragon.cn/tags/SQL%E6%9F%A5%E8%AF%A2/</link><description>Recent content in SQL查询 on cmdragon's Blog</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Sun, 28 Sep 2025 07:29:38 +0800</lastBuildDate><atom:link href="https://blog.cmdragon.cn/tags/SQL%E6%9F%A5%E8%AF%A2/index.xml" rel="self" type="application/rss+xml"/><item><title>PostgreSQL查询的筛子、排序、聚合、分组？你会用它们搞定数据吗？</title><link>https://blog.cmdragon.cn/posts/ef4800975ffa84f1ca51976a70a1585b/</link><pubDate>Sun, 28 Sep 2025 07:29:38 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/ef4800975ffa84f1ca51976a70a1585b/</guid><description>PostgreSQL中的WHERE子句用于精准筛选数据，支持基本比较与逻辑运算，以及IN、BETWEEN、LIKE、IS NULL等谓词处理复杂场景。ORDER BY子句用于按指定规则排序结果，支持单列、多列及计算列排序。聚合函数如COUNT、SUM、AVG等用于提炼关键信息，GROUP BY与HAVING用于分组分析，WHERE过滤行，HAVING过滤分组结果。综合实践展示了如何组合过滤、排序与聚合，常见报错及解决方法也提供了实用指导。</description></item><item><title>想解锁PostgreSQL查询从基础到进阶的核心知识点？你都get了吗？</title><link>https://blog.cmdragon.cn/posts/887809b3e0375f5956873cd442f516d8/</link><pubDate>Fri, 26 Sep 2025 07:52:14 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/887809b3e0375f5956873cd442f516d8/</guid><description>PostgreSQL查询的核心操作包括&lt;code&gt;SELECT&lt;/code&gt;、&lt;code&gt;WHERE&lt;/code&gt;、&lt;code&gt;ORDER BY&lt;/code&gt;、&lt;code&gt;LIMIT&lt;/code&gt;、&lt;code&gt;JOIN&lt;/code&gt;、聚合函数和子查询。&lt;code&gt;SELECT&lt;/code&gt;用于从表中提取数据，&lt;code&gt;WHERE&lt;/code&gt;用于过滤条件，&lt;code&gt;ORDER BY&lt;/code&gt;用于排序，&lt;code&gt;LIMIT&lt;/code&gt;和&lt;code&gt;OFFSET&lt;/code&gt;用于分页。&lt;code&gt;JOIN&lt;/code&gt;用于关联多个表，聚合函数如&lt;code&gt;COUNT&lt;/code&gt;、&lt;code&gt;SUM&lt;/code&gt;等用于数据计算，&lt;code&gt;GROUP BY&lt;/code&gt;用于分组统计，&lt;code&gt;HAVING&lt;/code&gt;用于过滤分组结果。子查询用于嵌套查询逻辑。常见报错包括语法错误、数据类型不匹配和表名错误，需注意SQL执行顺序和数据类型一致性。</description></item><item><title>N+1查询：数据库性能的隐形杀手与终极拯救指南</title><link>https://blog.cmdragon.cn/posts/97852b6355fc0ee843ad8870810ec928/</link><pubDate>Tue, 06 May 2025 00:16:30 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/97852b6355fc0ee843ad8870810ec928/</guid><description>N+1查询问题是ORM中常见的性能陷阱，表现为在查询主对象时，对每个关联对象进行单独查询，导致查询次数过多。以博客系统为例，查询10位作者及其文章会产生11次查询。通过Tortoise-ORM的&lt;code&gt;prefetch_related&lt;/code&gt;方法，可以将查询优化为2次，显著提升性能。优化后的实现方案包括使用SQL JOIN语句加载关联数据，并结合FastAPI进行实践。进阶优化技巧包括多层预加载、选择性字段加载和分页查询结合。常见报错涉及模型注册、连接关闭和字段匹配问题，需针对性解决。</description></item><item><title>查询与操作</title><link>https://blog.cmdragon.cn/posts/b60d658ecf76bd9c3f3d3a7b5a158e73/</link><pubDate>Wed, 11 Dec 2024 00:18:53 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/b60d658ecf76bd9c3f3d3a7b5a158e73/</guid><description>查询与操作是数据库管理中的核心任务，使用SQL语句能够有效地从数据库中获取、修改、删除和管理数据。本节将介绍常用的SQL查询语句和数据操作，包括基本的选择、过滤、排序、分组与聚合操作，以帮助读者掌握如何在数据库中进行高效的数据查询和操作。</description></item></channel></rss>