<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>异步测试 on cmdragon's Blog</title><link>https://blog.cmdragon.cn/tags/%E5%BC%82%E6%AD%A5%E6%B5%8B%E8%AF%95/</link><description>Recent content in 异步测试 on cmdragon's Blog</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Tue, 09 Sep 2025 04:07:19 +0800</lastBuildDate><atom:link href="https://blog.cmdragon.cn/tags/%E5%BC%82%E6%AD%A5%E6%B5%8B%E8%AF%95/index.xml" rel="self" type="application/rss+xml"/><item><title>如何在FastAPI中玩转“时光倒流”的数据库事务回滚测试？</title><link>https://blog.cmdragon.cn/posts/bf9883a75ffa46b523a03b16ec56ce48/</link><pubDate>Tue, 09 Sep 2025 04:07:19 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/bf9883a75ffa46b523a03b16ec56ce48/</guid><description>在 FastAPI 项目中，集成测试通过事务回滚机制确保测试环境的干净性。使用 &lt;code&gt;pytest&lt;/code&gt;、&lt;code&gt;SQLAlchemy&lt;/code&gt; 和 &lt;code&gt;FastAPI TestClient&lt;/code&gt; 组合，实现数据库事务的嵌套控制，测试中的所有数据库操作在用例结束时自动回滚。通过 &lt;code&gt;begin_nested()&lt;/code&gt; 创建保存点，确保每个测试用例在独立的事务中执行，避免数据污染。测试案例模拟用户注册和资料修改，验证数据库写入和接口请求的正确性。常见问题如 &lt;code&gt;IntegrityError&lt;/code&gt; 和连接未释放，通过检查事务回滚机制和显式关闭连接解决。</description></item><item><title>如何在FastAPI中巧妙隔离依赖项，让单元测试不再头疼？</title><link>https://blog.cmdragon.cn/posts/77ae327dc941b0e74ecc6a8794c084d0/</link><pubDate>Wed, 03 Sep 2025 06:10:25 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/77ae327dc941b0e74ecc6a8794c084d0/</guid><description>FastAPI单元测试是确保应用质量的关键，尤其依赖注入系统的隔离测试至关重要。通过依赖注入机制，FastAPI能自动解析函数参数并执行依赖函数，将返回值注入路由处理函数。测试时，可使用&lt;code&gt;dependency_overrides&lt;/code&gt;替换依赖项，模拟不同场景。单元测试应占据最大比重，避免外部服务不可用导致的测试失败。测试技巧包括模拟依赖返回、依赖项层级隔离和异步依赖处理。实战案例展示了用户认证测试的具体实现，确保权限验证逻辑正确。</description></item><item><title>Python异步编程进阶指南：破解高并发系统的七重封印</title><link>https://blog.cmdragon.cn/posts/6163781e0bba17626978fadf63b3e92e/</link><pubDate>Tue, 25 Feb 2025 00:18:53 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/6163781e0bba17626978fadf63b3e92e/</guid><description>🦾 本文是异步编程系列的终极篇章：&lt;/br&gt;异步上下文管理器与迭代器的工程化应用&lt;/br&gt;跨进程通信的7种异步模式（Redis/RabbitMQ/Kafka）&lt;/br&gt;异步单元测试与性能剖析的完整方法论&lt;/br&gt;十万级QPS系统的线程池/协程池混合调度方案</description></item></channel></rss>