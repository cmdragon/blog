<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>测试覆盖率 on cmdragon's Blog</title><link>https://blog.cmdragon.cn/tags/%E6%B5%8B%E8%AF%95%E8%A6%86%E7%9B%96%E7%8E%87/</link><description>Recent content in 测试覆盖率 on cmdragon's Blog</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Tue, 02 Sep 2025 01:49:10 +0800</lastBuildDate><atom:link href="https://blog.cmdragon.cn/tags/%E6%B5%8B%E8%AF%95%E8%A6%86%E7%9B%96%E7%8E%87/index.xml" rel="self" type="application/rss+xml"/><item><title>测试覆盖率不够高？这些技巧让你的FastAPI测试无懈可击！</title><link>https://blog.cmdragon.cn/posts/0577d0e24f48b3153b510e74d3d1a822/</link><pubDate>Tue, 02 Sep 2025 01:49:10 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/0577d0e24f48b3153b510e74d3d1a822/</guid><description>FastAPI通过TestClient工具支持单元测试，模拟HTTP请求直接调用路由处理器，验证响应状态码和数据结构。Pydantic模型确保响应数据的结构和类型符合预期，验证失败时返回422错误。测试覆盖率可通过pytest-cov工具统计，依赖项使用unittest.mock模拟。测试金字塔模型建议单元测试占70-80%，集成测试占15-20%，端到端测试占5-10%。常见错误如422、401和500，可通过检查响应模型、注入认证token和启用详细日志进行调试。</description></item><item><title>为什么你的FastAPI测试覆盖率总是低得让人想哭？</title><link>https://blog.cmdragon.cn/posts/985c18ca802f1b6da828b92e082b4d4e/</link><pubDate>Mon, 01 Sep 2025 03:56:38 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/985c18ca802f1b6da828b92e082b4d4e/</guid><description>FastAPI 开发中，测试环境和基础框架的搭建至关重要。使用 &lt;code&gt;pipenv&lt;/code&gt; 或 &lt;code&gt;poetry&lt;/code&gt; 管理虚拟环境和依赖，项目结构包括应用入口、API 路由、数据模型、数据库连接和配置文件。核心框架代码涉及 SQLAlchemy 配置、Pydantic 配置管理和 FastAPI 入口。测试覆盖率检测工具配置包括 &lt;code&gt;pytest&lt;/code&gt;、&lt;code&gt;coverage.py&lt;/code&gt; 和 &lt;code&gt;pytest-cov&lt;/code&gt;，编写测试用例并生成覆盖率报告。优化策略包括分支覆盖率测试、异步任务覆盖率和目标覆盖率报告，确保代码质量和可维护性。</description></item><item><title>如何让FastAPI测试不再成为你的噩梦？</title><link>https://blog.cmdragon.cn/posts/29858a7a10d20b4e4649cb75fb422eab/</link><pubDate>Sun, 31 Aug 2025 06:09:47 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/29858a7a10d20b4e4649cb75fb422eab/</guid><description>本文介绍了如何配置测试环境并搭建基础框架，包括安装依赖包、设计项目结构和实现基础框架。通过FastAPI和pytest的集成，详细展示了如何编写和运行测试用例，特别是异步测试和测试覆盖率优化策略。此外，还提供了常见报错的解决方案和高级测试策略，如数据库事务测试和持续集成配置。这些步骤和方法确保了测试的全面性和可靠性，提升了代码质量。</description></item></channel></rss>