<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>锁等待 on cmdragon's Blog</title><link>https://blog.cmdragon.cn/tags/%E9%94%81%E7%AD%89%E5%BE%85/</link><description>Recent content in 锁等待 on cmdragon's Blog</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Wed, 15 Oct 2025 08:15:14 +0800</lastBuildDate><atom:link href="https://blog.cmdragon.cn/tags/%E9%94%81%E7%AD%89%E5%BE%85/index.xml" rel="self" type="application/rss+xml"/><item><title>PostgreSQL的“时光机”MVCC和锁机制是怎么搞定高并发的？</title><link>https://blog.cmdragon.cn/posts/26614eb7da6c476dde41d367ad888d2f/</link><pubDate>Wed, 15 Oct 2025 08:15:14 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/26614eb7da6c476dde41d367ad888d2f/</guid><description>MVCC（多版本并发控制）是PostgreSQL实现高并发的核心机制，通过为每个事务提供数据快照，解决读-写冲突，实现无锁并发。PostgreSQL的锁机制包括表级锁、行级锁等，行级锁粒度小，并发高。锁等待和死锁是常见问题，死锁由循环等待引起。优化实践包括减少事务长度、合理选择锁级别、使用乐观锁、统一资源顺序、利用NOWAIT和SKIP LOCKED避免等待，以及监控锁状态。通过优化事务处理顺序和缩短锁持有时间，可以有效避免锁等待和死锁。</description></item></channel></rss>