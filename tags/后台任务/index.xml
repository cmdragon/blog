<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>后台任务 on cmdragon's Blog</title><link>https://blog.cmdragon.cn/tags/%E5%90%8E%E5%8F%B0%E4%BB%BB%E5%8A%A1/</link><description>Recent content in 后台任务 on cmdragon's Blog</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Fri, 01 Aug 2025 08:22:50 +0800</lastBuildDate><atom:link href="https://blog.cmdragon.cn/tags/%E5%90%8E%E5%8F%B0%E4%BB%BB%E5%8A%A1/index.xml" rel="self" type="application/rss+xml"/><item><title>FastAPI后台任务为何能让邮件发送如此丝滑？</title><link>https://blog.cmdragon.cn/posts/19241679a1852122f740391cbdc21bae/</link><pubDate>Fri, 01 Aug 2025 08:22:50 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/19241679a1852122f740391cbdc21bae/</guid><description>FastAPI通过BackgroundTasks模块实现异步后台任务处理，具有任务执行与请求处理解耦、支持依赖注入、自动处理异常等特点。实战中，通过aiosmtplib集成SMTP协议实现邮件通知功能，支持SSL加密连接和Jinja2模板引擎。日志系统采用结构化日志配置和请求日志中间件，优化建议包括使用RotatingFileHandler、接入ELK或Sentry日志系统及敏感信息过滤。常见问题涉及后台任务未执行和SMTP认证错误，解决方案包括检查路由、验证异步执行和SMTP配置。</description></item><item><title>FastAPI的请求-响应周期为何需要后台任务分离？</title><link>https://blog.cmdragon.cn/posts/c7b54d6b3b6b5041654e69e5610bf3b9/</link><pubDate>Thu, 31 Jul 2025 06:11:25 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/c7b54d6b3b6b5041654e69e5610bf3b9/</guid><description>FastAPI 的请求-响应周期遵循 ASGI 协议，类似于餐厅点餐流程。同步处理耗时操作会导致服务阻塞，影响性能。通过 &lt;code>BackgroundTasks&lt;/code> 实现后台任务分离，任务分发器创建独立任务单元，工作线程池异步执行。&lt;code>BackgroundTasks&lt;/code> 适用于短时任务，而 Celery 更适合长时间任务和跨进程执行。任务中访问数据库时应重新建立连接，避免依赖生命周期问题。错误处理可通过即时捕获或延迟记录模式实现，推荐使用装饰器封装任务函数。</description></item><item><title>FastAPI后台任务：异步魔法还是同步噩梦？</title><link>https://blog.cmdragon.cn/posts/6a69eca9fd14ba8f6fa41502c5014edd/</link><pubDate>Tue, 29 Jul 2025 10:00:09 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/6a69eca9fd14ba8f6fa41502c5014edd/</guid><description>FastAPI中的后台任务用于处理不需要立即返回给客户端的耗时操作，如发送邮件或处理文件。通过&lt;code>BackgroundTasks&lt;/code>将任务加入队列，系统在响应返回后异步执行任务。核心原理包括任务注册机制和FIFO执行时序控制，默认使用线程池执行任务。典型应用场景包括邮件通知、文件批处理和数据清洗。常见报错如422 Validation Error和500 Internal Server Error，可通过检查请求体、添加默认值和使用错误重试机制解决。</description></item></channel></rss>