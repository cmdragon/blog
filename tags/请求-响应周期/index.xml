<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>请求-响应周期 on cmdragon's Blog</title><link>https://blog.cmdragon.cn/tags/%E8%AF%B7%E6%B1%82-%E5%93%8D%E5%BA%94%E5%91%A8%E6%9C%9F/</link><description>Recent content in 请求-响应周期 on cmdragon's Blog</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Thu, 31 Jul 2025 06:11:25 +0800</lastBuildDate><atom:link href="https://blog.cmdragon.cn/tags/%E8%AF%B7%E6%B1%82-%E5%93%8D%E5%BA%94%E5%91%A8%E6%9C%9F/index.xml" rel="self" type="application/rss+xml"/><item><title>FastAPI的请求-响应周期为何需要后台任务分离？</title><link>https://blog.cmdragon.cn/posts/c7b54d6b3b6b5041654e69e5610bf3b9/</link><pubDate>Thu, 31 Jul 2025 06:11:25 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/c7b54d6b3b6b5041654e69e5610bf3b9/</guid><description>FastAPI 的请求-响应周期遵循 ASGI 协议，类似于餐厅点餐流程。同步处理耗时操作会导致服务阻塞，影响性能。通过 &lt;code&gt;BackgroundTasks&lt;/code&gt; 实现后台任务分离，任务分发器创建独立任务单元，工作线程池异步执行。&lt;code&gt;BackgroundTasks&lt;/code&gt; 适用于短时任务，而 Celery 更适合长时间任务和跨进程执行。任务中访问数据库时应重新建立连接，避免依赖生命周期问题。错误处理可通过即时捕获或延迟记录模式实现，推荐使用装饰器封装任务函数。</description></item></channel></rss>