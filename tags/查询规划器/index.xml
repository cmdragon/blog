<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>查询规划器 on cmdragon's Blog</title><link>https://blog.cmdragon.cn/tags/%E6%9F%A5%E8%AF%A2%E8%A7%84%E5%88%92%E5%99%A8/</link><description>Recent content in 查询规划器 on cmdragon's Blog</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Mon, 20 Oct 2025 03:15:06 +0800</lastBuildDate><atom:link href="https://blog.cmdragon.cn/tags/%E6%9F%A5%E8%AF%A2%E8%A7%84%E5%88%92%E5%99%A8/index.xml" rel="self" type="application/rss+xml"/><item><title>PostgreSQL全表扫描慢到崩溃？建索引+改查询+更统计信息三招能破？</title><link>https://blog.cmdragon.cn/posts/748cdac2536008199abf8a8a2cd0ec85/</link><pubDate>Mon, 20 Oct 2025 03:15:06 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/748cdac2536008199abf8a8a2cd0ec85/</guid><description>全表扫描在PostgreSQL中会逐行读取表数据，适用于小表，但对大表会导致性能问题。查询规划器通过生成候选计划、计算代价并选择最优执行计划来优化查询。避免全表扫描的核心是为关键列创建索引，如WHERE子句、JOIN条件和排序/分组列。查询语句应避免前缀通配符、列函数和隐式类型转换，使用显式JOIN。统计信息的准确性对规划器决策至关重要，可通过ANALYZE命令手动更新或调整autovacuum参数自动更新。</description></item></channel></rss>