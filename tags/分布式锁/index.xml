<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>分布式锁 on cmdragon's Blog</title><link>https://blog.cmdragon.cn/tags/%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/</link><description>Recent content in 分布式锁 on cmdragon's Blog</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Sun, 17 Aug 2025 10:03:03 +0800</lastBuildDate><atom:link href="https://blog.cmdragon.cn/tags/%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/index.xml" rel="self" type="application/rss+xml"/><item><title>如何用APScheduler和FastAPI打造永不宕机的分布式定时任务系统？</title><link>https://blog.cmdragon.cn/posts/51a0ff47f509fb6238150a96f551b317/</link><pubDate>Sun, 17 Aug 2025 10:03:03 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/51a0ff47f509fb6238150a96f551b317/</guid><description>APScheduler分布式定时任务协调解决了单点故障和任务重复执行的问题。其核心组件包括作业存储、执行器和触发器，通过Redis实现分布式锁、心跳检测和故障转移。FastAPI集成APScheduler可实现分布式任务调度，确保任务单节点执行和优雅关闭。应用场景包括电商优惠券过期系统和分布式日志清理系统。常见问题如任务重复执行和节点状态不同步，可通过正确加锁和双心跳检测机制解决。进阶技巧包括任务监控、动态扩缩容和最佳实践建议。</description></item><item><title>FastAPI中Pydantic异步分布式唯一性校验</title><link>https://blog.cmdragon.cn/posts/e92a3da8b4e4beaf5a14ef4c79489b42/</link><pubDate>Wed, 02 Apr 2025 00:47:55 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/e92a3da8b4e4beaf5a14ef4c79489b42/</guid><description>FastAPI开发中，异步分布式唯一性校验通过异步IO、分布式锁和二级缓存技术解决传统同步校验的并发冲突、性能瓶颈和响应延迟问题。手机和邮箱的唯一性校验通过Pydantic模型定义、异步校验服务层和路由层集成实现。多级缓存策略结合本地缓存、Redis和数据库，确保数据一致性。Redis分布式锁防止并发冲突，速率限制中间件防止恶意请求。常见报错包括锁超时和非法手机号，需调整锁超时时间和净化输入。</description></item></channel></rss>