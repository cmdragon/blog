<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>事务回滚 on cmdragon's Blog</title><link>https://blog.cmdragon.cn/tags/%E4%BA%8B%E5%8A%A1%E5%9B%9E%E6%BB%9A/</link><description>Recent content in 事务回滚 on cmdragon's Blog</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Tue, 09 Sep 2025 04:07:19 +0800</lastBuildDate><atom:link href="https://blog.cmdragon.cn/tags/%E4%BA%8B%E5%8A%A1%E5%9B%9E%E6%BB%9A/index.xml" rel="self" type="application/rss+xml"/><item><title>如何在FastAPI中玩转“时光倒流”的数据库事务回滚测试？</title><link>https://blog.cmdragon.cn/posts/bf9883a75ffa46b523a03b16ec56ce48/</link><pubDate>Tue, 09 Sep 2025 04:07:19 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/bf9883a75ffa46b523a03b16ec56ce48/</guid><description>在 FastAPI 项目中，集成测试通过事务回滚机制确保测试环境的干净性。使用 &lt;code&gt;pytest&lt;/code&gt;、&lt;code&gt;SQLAlchemy&lt;/code&gt; 和 &lt;code&gt;FastAPI TestClient&lt;/code&gt; 组合，实现数据库事务的嵌套控制，测试中的所有数据库操作在用例结束时自动回滚。通过 &lt;code&gt;begin_nested()&lt;/code&gt; 创建保存点，确保每个测试用例在独立的事务中执行，避免数据污染。测试案例模拟用户注册和资料修改，验证数据库写入和接口请求的正确性。常见问题如 &lt;code&gt;IntegrityError&lt;/code&gt; 和连接未释放，通过检查事务回滚机制和显式关闭连接解决。</description></item><item><title>数据库事务回滚：FastAPI中的存档与读档大法</title><link>https://blog.cmdragon.cn/posts/61f400974ef7e1af22b578822f89237c/</link><pubDate>Sat, 10 May 2025 00:18:52 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/61f400974ef7e1af22b578822f89237c/</guid><description>事务回滚机制确保数据库操作的原子性，适用于需要保持数据一致性的场景，如银行转账。FastAPI通过SQLAlchemy的session管理实现事务控制，使用上下文管理器处理事务，确保在异常时回滚。Alembic用于数据库版本控制，生成迁移脚本并管理多环境迁移策略。综合应用案例展示了用户注册时的事务处理，包括检查用户名唯一性、创建用户及其关联记录，并在异常时回滚。课后Quiz和常见报错解决提供了实际操作中的指导和问题处理方法。</description></item></channel></rss>