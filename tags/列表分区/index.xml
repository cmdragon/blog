<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>列表分区 on cmdragon's Blog</title><link>https://blog.cmdragon.cn/tags/%E5%88%97%E8%A1%A8%E5%88%86%E5%8C%BA/</link><description>Recent content in 列表分区 on cmdragon's Blog</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Mon, 13 Oct 2025 03:29:44 +0800</lastBuildDate><atom:link href="https://blog.cmdragon.cn/tags/%E5%88%97%E8%A1%A8%E5%88%86%E5%8C%BA/index.xml" rel="self" type="application/rss+xml"/><item><title>大表查询慢到翻遍整个书架？PostgreSQL分区表教你怎么“分类”才高效</title><link>https://blog.cmdragon.cn/posts/7b7053f392147a8b3b1a16bebeb08d0a/</link><pubDate>Mon, 13 Oct 2025 03:29:44 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/7b7053f392147a8b3b1a16bebeb08d0a/</guid><description>分区表通过将逻辑上的大表拆分为物理上的小表，提升数据库性能。PostgreSQL支持范围分区、列表分区和哈希分区三种方式，分别适用于按连续区间、枚举值和哈希值拆分数据的场景。分区表的核心优势包括查询加速、批量操作高效、冷数据存储优化和索引性能提升。声明式分区是推荐实现方式，通过创建分区表、分区和索引，结合分区剪枝优化查询性能。维护分区表时，可添加、删除或修改分区，并可通过子分区进一步优化。最佳实践包括选择合适的分区键、控制分区数量、考虑扩展性、避免跨分区操作和谨慎使用默认分区。</description></item></channel></rss>