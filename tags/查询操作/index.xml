<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>查询操作 on cmdragon's Blog</title><link>https://blog.cmdragon.cn/tags/%E6%9F%A5%E8%AF%A2%E6%93%8D%E4%BD%9C/</link><description>Recent content in 查询操作 on cmdragon's Blog</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Wed, 16 Jul 2025 10:47:21 +0800</lastBuildDate><atom:link href="https://blog.cmdragon.cn/tags/%E6%9F%A5%E8%AF%A2%E6%93%8D%E4%BD%9C/index.xml" rel="self" type="application/rss+xml"/><item><title>FastAPI与GraphQL的完美邂逅：如何打造高效API？</title><link>https://blog.cmdragon.cn/posts/fb5c5c7b00bbe57b3a5346b8ee5bc289/</link><pubDate>Wed, 16 Jul 2025 10:47:21 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/fb5c5c7b00bbe57b3a5346b8ee5bc289/</guid><description>FastAPI与GraphQL集成通过Ariadne库实现，支持查询、变更和订阅操作。查询操作通过GraphQL解析器获取数据并验证格式，变更操作使用Pydantic进行数据验证和持久化存储，订阅操作通过WebSocket实现实时消息推送。项目采用分层架构，核心操作包括用户查询、创建和消息订阅。常见错误如422验证错误和类型解析错误，可通过检查请求参数、使用Pydantic模型和自定义标量解析器解决。</description></item><item><title>深入 Django 模型层：数据库设计与 ORM 实践指南</title><link>https://blog.cmdragon.cn/posts/45f66244be583a6db133781c25b25d98/</link><pubDate>Fri, 03 May 2024 18:25:33 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/45f66244be583a6db133781c25b25d98/</guid><description>&lt;img src="https://blog.cmdragon.cn/images/2024_05_03 18_32_02.png" title="2024_05_03 18_32_02.png" alt="2024_05_03 18_32_02.png"/&gt;
&lt;h2 id="第一章引言"&gt;第一章：引言&lt;/h2&gt;
&lt;p&gt;Django是一个基于Python的开源Web应用程序框架，它遵循MTV（模型-模板-视图）的设计模式。Django框架的目标是使Web开发变得简单、快速和高效。它提供了许多功能强大且易于使用的工具，包括URL路由、模板系统、表单处理、认证系统等，使开发人员能够专注于业务逻辑的实现而不必从头开始构建基本功能。&lt;/p&gt;</description></item></channel></rss>