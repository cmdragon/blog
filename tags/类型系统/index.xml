<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>类型系统 on cmdragon's Blog</title><link>https://blog.cmdragon.cn/tags/%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F/</link><description>Recent content in 类型系统 on cmdragon's Blog</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Mon, 14 Jul 2025 15:33:21 +0800</lastBuildDate><atom:link href="https://blog.cmdragon.cn/tags/%E7%B1%BB%E5%9E%8B%E7%B3%BB%E7%BB%9F/index.xml" rel="self" type="application/rss+xml"/><item><title>REST和GraphQL究竟谁才是API设计的终极赢家？</title><link>https://blog.cmdragon.cn/posts/218ad2370eab6197f42fdc9c52f0fc19/</link><pubDate>Mon, 14 Jul 2025 15:33:21 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/218ad2370eab6197f42fdc9c52f0fc19/</guid><description>REST架构基于HTTP协议，采用资源导向设计，通过URL路径参数定位资源，适合多端点请求。GraphQL基于类型系统，采用单端点设计，允许客户端定义响应结构，适合复杂查询。REST通过多个请求获取嵌套数据，GraphQL单次查询即可实现。性能测试显示，REST在简单查询中表现更优，GraphQL在复杂查询中延迟更低。混合架构可通过网关层集成两者，优化查询策略如DataLoader解决N+1问题。异常处理需关注验证错误和执行错误。</description></item></channel></rss>