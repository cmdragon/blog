<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>异步通信 on cmdragon's Blog</title><link>https://blog.cmdragon.cn/tags/%E5%BC%82%E6%AD%A5%E9%80%9A%E4%BF%A1/</link><description>Recent content in 异步通信 on cmdragon's Blog</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Fri, 22 Aug 2025 14:32:13 +0800</lastBuildDate><atom:link href="https://blog.cmdragon.cn/tags/%E5%BC%82%E6%AD%A5%E9%80%9A%E4%BF%A1/index.xml" rel="self" type="application/rss+xml"/><item><title>如何在FastAPI中巧妙实现延迟队列，让任务乖乖等待？</title><link>https://blog.cmdragon.cn/posts/174450702d9e609a072a7d1aaa84750b/</link><pubDate>Fri, 22 Aug 2025 14:32:13 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/174450702d9e609a072a7d1aaa84750b/</guid><description>消息队列是分布式系统中实现异步通信的核心组件，延迟队列则允许在指定时间后投递消息，适用于定时任务和失败重试等场景。FastAPI中推荐使用Redis或RabbitMQ作为消息中间件，结合Celery或arq实现延迟队列。Redis通过Sorted Set和arq实现全异步延迟队列，RabbitMQ则利用死信队列实现延迟投递。实际应用包括电商订单超时、会议提醒、重试机制和定时报告等。常见问题如422验证错误和连接拒绝错误，需检查数据格式和连接参数。</description></item></channel></rss>