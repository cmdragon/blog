<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>CI/CD on cmdragon's Blog</title><link>https://blog.cmdragon.cn/tags/CI/CD/</link><description>Recent content in CI/CD on cmdragon's Blog</description><generator>Hugo</generator><language>zh-cn</language><lastBuildDate>Mon, 15 Sep 2025 05:16:10 +0800</lastBuildDate><atom:link href="https://blog.cmdragon.cn/tags/CI/CD/index.xml" rel="self" type="application/rss+xml"/><item><title>如何用GitHub Actions为FastAPI项目打造自动化测试流水线？</title><link>https://blog.cmdragon.cn/posts/6157d87338ce894d18c013c3c4777abb/</link><pubDate>Mon, 15 Sep 2025 05:16:10 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/6157d87338ce894d18c013c3c4777abb/</guid><description>持续集成（CI）是一种自动化开发实践，通过自动运行测试和代码检查来验证代码变更的正确性。GitHub Actions 是 GitHub 的自动化工具，用于实现 CI/CD 流程，核心概念包括工作流、事件、作业、步骤和动作。FastAPI 项目通过标准化的项目结构和 pytest 测试用例，结合 GitHub Actions 搭建自动化测试流水线，确保代码质量和兼容性。流水线通过 Push 或 PR 触发，自动安装依赖、运行测试和检查代码风格，帮助开发者提前发现问题，提升开发效率。</description></item><item><title>如何用Git Hook和CI流水线为FastAPI项目保驾护航？</title><link>https://blog.cmdragon.cn/posts/fc4ef84559e04693a620d0714cb30787/</link><pubDate>Sun, 14 Sep 2025 00:12:42 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/fc4ef84559e04693a620d0714cb30787/</guid><description>持续集成（CI）在FastAPI项目中通过频繁合并代码和自动验证，确保代码变更不会破坏接口功能、模型验证或代码风格。Git Hook作为本地代码质量的第一道防线，通过pre-commit钩子在提交前拦截无效代码。GitHub Actions用于构建CI流水线，自动化测试和构建Docker镜像。两者结合，本地快速反馈，全局统一验证，最大化保障代码质量。</description></item><item><title>Django测试与持续集成：从入门到精通</title><link>https://blog.cmdragon.cn/posts/d81e79d960dcfe37be921f2c557a78b2/</link><pubDate>Sat, 18 May 2024 16:38:41 +0800</pubDate><guid>https://blog.cmdragon.cn/posts/d81e79d960dcfe37be921f2c557a78b2/</guid><description>&lt;img src="https://blog.cmdragon.cn/images/2024_05_18 16_43_35.png" title="2024_05_18 16_43_35.png" alt="2024_05_18 16_43_35.png"/&gt;
&lt;h2 id="第1章django测试基础"&gt;第1章：Django测试基础&lt;/h2&gt;
&lt;h3 id="11-django测试框架概述"&gt;1.1 Django测试框架概述&lt;/h3&gt;
&lt;p&gt;Django测试框架是Django web
框架的一部分，提供了一个强大的工具集，帮助开发人员编写、运行和维护测试用例。Django测试框架基于Python的unittest模块，并扩展了许多有用的特性，例如数据库支持、测试客户端、模型和视图测试等。AD：&lt;a href="https://cmdragon.cn/"&gt;首页 | 一个覆盖广泛主题工具的高效在线平台&lt;/a&gt;&lt;/p&gt;</description></item></channel></rss>